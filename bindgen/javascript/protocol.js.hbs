// This file is auto-generated by trix bindgen.

import { TRPClient } from "tx3-sdk/trp";

export const DEFAULT_TRP_ENDPOINT = "{{trpEndpoint}}";

export const DEFAULT_HEADERS = {
{{#each headers}}
    '{{@key}}': '{{this}}',
{{/each}}
};

export const DEFAULT_ENV_ARGS = {
{{#each envArgs}}
    '{{@key}}': '{{this}}',
{{/each}}
};

{{#each transactions}}
export const {{constantCase constant_name}} = {
    bytecode: "{{ir_bytes}}",
    encoding: "hex",
    version: "{{ir_version}}",
};

{{/each}}
export class Client {
    #client;

    constructor(options) {
        this.#client = new TRPClient(options);
    }

    {{#each transactions}}
    async {{camelCase function_name}}(args) {
        return await this.#client.resolve({
            tir: {{constantCase constant_name}},
            args,
        });
    }

    {{/each}}
    async submit(params) {
        await this.#client.submit(params);
    }
}

// Create a default client instance
export const protocol = new Client({
    endpoint: DEFAULT_TRP_ENDPOINT,
    headers: DEFAULT_HEADERS,
    envArgs: DEFAULT_ENV_ARGS,
});
